openapi: 3.0.0
info:
  title: department
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /departments/:
    get:
      summary: Get all departments
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: array
                items:
                  $ref: '#/components/schemas/department'
              examples:
                예시:
                  value:
                    - id: 1
                      name: 컴퓨터공학부
                      tags:
                        - 입학
                        - 졸업
                        - 수업
                      follow:
                        - 졸업
                    - id: 2
                      name: 기계공학부
                      tags:
                        - 학부
                        - 대학원
                      follow:
                        - 대학원
        '401':
          description: |-
            Unauthorized
            토큰 재발급 혹은 로그인 필요
      operationId: get-departments
      description: 모든 과의 정보 리턴
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer [token]'
    parameters: []
  '/departments/{department_id}':
    get:
      summary: Get department by department id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/department'
              examples:
                example-1:
                  value:
                    id: 1
                    name: 컴퓨터공학부
                    tags:
                      - 입학
                      - 졸업
                      - 수업
                    follow:
                      - 졸업
        '401':
          description: |-
            Unauthorized
            토큰 재발급 혹은 로그인 필요
      operationId: get-department-follow
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer [token]'
      description: id에 해당하는 과의 정보 리턴
    parameters:
      - schema:
          type: string
        name: department_id
        in: path
        required: true
        description: 과 id
  '/departments/{department_id}/follow':
    parameters:
      - schema:
          type: string
        name: department_id
        in: path
        required: true
    post:
      summary: create department follow
      operationId: post-departments-department_id-follow
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/department'
              examples:
                example-1:
                  value:
                    id: 1
                    name: 컴퓨터공학부
                    tags:
                      - 입학
                      - 졸업
                      - 수업
                    follow:
                      - 졸업
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: 'create department follow, 이미 생성되어있다면 400, '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer [token]'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                follow:
                  type: string
              required:
                - follow
            examples:
              example-1:
                value:
                  follow: 장학
    delete:
      summary: Delete department follow
      operationId: delete-departments-department_id-follow
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/department'
              examples:
                example-1:
                  value:
                    id: 1
                    name: 컴퓨터공학부
                    tags:
                      - 입학
                      - 졸업
                      - 수업
                    follow:
                      - 졸업
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: 'Delete department follow, 이미 지운 것을 다시 지우는 경우 204.204를 리턴하는 경우 department informantion은 제공하지 않는다.'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer [token]'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                follow:
                  type: string
            examples:
              example-1:
                value:
                  follow: 장학
components:
  schemas:
    department:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 1
          name: 컴퓨터공학부
          tags:
            - 입학
            - 졸업
            - 수업
          follow:
            - 졸업
      properties:
        id:
          type: number
        name:
          type: string
          minLength: 1
        tags:
          type: array
          items:
            type: string
        follow:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - tags
        - follow
